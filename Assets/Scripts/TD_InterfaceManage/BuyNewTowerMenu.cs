// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Google2u;


namespace InterfaceManage
{
	public class BuyNewTowerMenu : MonoBehaviour
	{
		public GameObject[] towerButtons;
		public GameObject[] towerPrefabs;
		public UILabel[] towerCashLabels;
		public bool showingTowers = true;

	
		public Color selectedColor;
		public Color regColor;


		public UILabel hideShowTowers;
		public BuyNewTowerMenu ()
		{
		}
		public void Start() {
			onToggleTowers();
		}
		public void onToggleTowers() {
			
			showingTowers = !showingTowers;
			float endAlpha = 0f;
			if(showingTowers) {
				endAlpha = 1f;
			}
			GridSelector.REF.drawOverlay(showingTowers);
			for(int i = 0 ;i<towerButtons.Length;i++) {
				TweenAlpha.Begin(towerButtons[i],i*0.1f,endAlpha);
				for(int j = 0;j<TowerList.Instance.Rows.Count;j++) {
					if(TowerList.Instance.Rows[j]._BaseTowerType==i) {
						this.towerCashLabels[i].text = TowerList.Instance.Rows[j]._Cost.ToString("C0");
					}
				}
			}
			if(showingTowers) {
				hideShowTowers.text = "HIDE TOWERS";
			} else {
				hideShowTowers.text = "SHOW TOWERS";
			}
		}
		public void deselectAllTowers() {
			for(int i = 0;i<this.towerButtons.Length;i++) {
				towerButtons[i].GetComponent<UIButton>().defaultColor = regColor;
			}
		}
		private void selectTower(int aTowerIndex) {
			for(int i = 0;i<this.towerButtons.Length;i++) {
				towerButtons[i].GetComponent<UIButton>().defaultColor = regColor;
			}
			GameManager.REF.selectedTowerPrefab = towerPrefabs[aTowerIndex];
			GridSelector.REF.drawOverlay(true);
			towerButtons[aTowerIndex].GetComponent<UIButton>().defaultColor = selectedColor;
		}
		public void onBuyBasic() {
			selectTower((int) ETowerTypes.BasicTower);
		}
		public void onBuyFlame() {
			selectTower((int) ETowerTypes.FireTower);

		}
		public void onBuyLaser() {
			selectTower((int) ETowerTypes.LaserTower);

		}
		public void onBuyCannon() {
			selectTower((int) ETowerTypes.CannonTower);

		}
		public void onBuyElectro() {
			selectTower((int) ETowerTypes.ElectroTower);

		}
		public void onBuyMoney() {
			selectTower((int) ETowerTypes.MoneyTower);
		}
	}
}

